#!/usr/bin/env bash

# Output to stdout if we aren't on a runner
if [ -z "${GITHUB_OUTPUT}" ]; then
    GITHUB_OUTPUT="/dev/stdout"
fi

csource="${BASH_SOURCE[0]}"
while [ -h "$csource" ] ; do csource="$(readlink "$csource")"; done
root="$( cd -P "$( dirname "$csource" )/../../" && pwd )"

. "${root}/.ci/load-ci.sh"
pushd "${root}"

# Path where utility binary should be found
bin="${root}/bin/vagrant-vmware-utility_darwin_universal"

# Run sanity checks
if [ ! -f "${bin}" ]; then
    fail "Utility binary is not found at expected path (${bin})"
fi

if [ -z "${UTILITY_VERSION}" ]; then
    fail "Utility version is not provided in expected environment variable (UTILITY_VERSION)"
fi

# Ensure binary is executable
chmod 0755 "${bin}" ||
    failure "Could not make bin file executable (${bin})"

# Create the final storage directory
mkdir -p "${root}/pkg-tmp" || fail "Could not create ./pkg-tmp directory"
# Create a staging directory to work in
stage="$(mktemp -d)" || fail "Could not create staging directory"
# Create a scripts directory
scripts="$(mktemp -d)" || fail "Could not create scripts directory"

# Setup the staging directory for packaging
mkdir -p "${stage}/opt/vagrant-vmware-desktop/bin"
cp -f "${bin}" "${stage}/opt/vagrant-vmware-desktop/bin/vagrant-vmware-utility" ||
    fail "Could not add utility binary to staging directory"
chmod -R 0755 "${stage}/opt/vagrant-vmware-desktop" ||
    fail "Could not modify permissions on staging directory"

mkdir -p "${stage}/opt/vagrant-vmware-desktop/config" ||
    fail "Could not create configuration directory within staging"

# Add our post install script
cat <<EOF >"${scripts}/postinstall"
#!/usr/bin/env bash

/opt/vagrant-vmware-desktop/bin/vagrant-vmware-utility service uninstall
/opt/vagrant-vmware-desktop/bin/vagrant-vmware-utility certificate generate
/opt/vagrant-vmware-desktop/bin/vagrant-vmware-utility service install

chflags hidden /opt
exit 0
EOF
chmod 0755 "${scripts}/postinstall" ||
    fail "Could not modify permission of post install script"

pkgbuild \
    --root "${stage}/opt/vagrant-vmware-desktop" \
    --identifier com.vagrant.vagrant-vmware-utility \
    --version "${UTILITY_VERSION}" \
    --install-location "/opt/vagrant-vmware-desktop" \
    --scripts "${scripts}" \
    "${root}/pkg-tmp/core.pkg" ||
    fail "Failed to build core package"

printf "core-path=%s\n" "${root}/pkg-tmp/core.pkg" >> "${GITHUB_OUTPUT}"
